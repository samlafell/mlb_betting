[project]
name = "sports-betting-dime-splits"
version = "0.2.0"
description = "MLB Sharp Betting Data Analysis System - A modular system for collecting, analyzing, and monitoring sharp betting action"
# readme = "USER_GUIDE.md"  # Disabled for Docker build
requires-python = ">=3.10"
dependencies = [
    "json5>=0.12.0",
    "mlb-statsapi>=1.9.0",
    "requests>=2.32.4",
    "toml>=0.10.2",
    "beautifulsoup4>=4.12.0",
    "lxml>=5.0.0",
    "pytz>=2024.1",
    "pydantic==2.10.0",
    "pydantic-settings>=2.4.0",
    "structlog>=24.4.0",
    "tenacity>=9.0.0",
    "httpx>=0.27.0",
    "click>=8.2.1",
    "rich>=13.0.0",
    "python-dateutil>=2.9.0.post0",
    "aiohttp>=3.12.13",
    "apscheduler>=3.10.4",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "scipy>=1.10.0",
    "psycopg2-binary>=2.9.10",
    "sqlalchemy>=2.0.41",
    "tabulate>=0.9.0",
    "selenium>=4.15.0",
    "undetected-chromedriver>=3.5.5",
    "asyncpg>=0.30.0",
    "backoff>=2.2.1",
    "brotli>=1.1.0",
    "ruff>=0.11.13",
    "playwright>=1.40.0",
    "pytest>=8.4.0",
    "tomli>=2.2.1",
    "prometheus-client>=0.21.0",
    "fastapi>=0.115.0",
    "uvicorn>=0.32.0",
    "websockets>=13.0",
    "opentelemetry-api>=1.27.0",
    "opentelemetry-sdk>=1.27.0",
    "opentelemetry-instrumentation>=0.48b0",
    "opentelemetry-exporter-otlp>=1.27.0",
    "psutil>=7.0.0",
    "jinja2>=3.1.6",
    "redis>=5.0.0",
    "mlflow>=2.10.0",
    "scikit-learn>=1.4.0",
    "lightgbm>=4.1.0",
    "polars>=1.20.0",
    "msgpack>=1.1.0",
    "croniter>=6.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.0",
    "pytest-cov>=5.0.0",
    "pytest-asyncio>=0.24.0",
    "pytest-mock>=3.14.0",
    "mypy>=1.11.0",
    "ruff>=0.6.0",
    "black>=24.8.0",
    "pre-commit>=3.8.0",
    "types-requests>=2.32.0",
    "types-toml>=0.10.8",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/mlb_sharp_betting"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
]

[tool.mypy]
python_version = "3.10"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "mlb_statsapi.*",
    "json5.*",
    "structlog.*",
]
ignore_missing_imports = true

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings  
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[dependency-groups]
dev = [
    "mypy>=1.16.0",
    "pytest-asyncio>=1.0.0",
]
