[tool:pytest]
# Pytest configuration for ML pipeline testing

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers for different test types
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (require external services)
    load_test: Load and performance tests
    deployment: Production deployment tests
    benchmark: Performance benchmark tests
    slow: Slow tests (may take >5 seconds)
    redis: Tests requiring Redis
    database: Tests requiring database
    api: API endpoint tests
    security: Security-related tests

# Test execution options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-fail-under=80
    --durations=10
    --maxfail=5

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning

# Minimum version
minversion = 6.0

# Test timeout (in seconds)
timeout = 300

# Parallel execution
# Uncomment for parallel test execution
# -n auto requires pytest-xdist
# addopts = -n auto

# Coverage configuration
[coverage:run]
source = src
omit = 
    */tests/*
    */venv/*
    */virtualenv/*
    */__pycache__/*
    */site-packages/*
    */test_*.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    @abstractmethod