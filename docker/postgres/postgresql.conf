# PostgreSQL Configuration for MLB Betting System Production
# Optimized for Docker deployment with performance focus
# Target: 8GB RAM system with 4 CPU cores

# =============================================================================
# CONNECTION AND AUTHENTICATION
# =============================================================================

# Connection Settings - Optimized for betting system load
max_connections = 200                    # Sufficient for API + background jobs
shared_preload_libraries = 'pg_stat_statements'  # Query analysis extension

# Authentication
listen_addresses = '*'
port = 5432

# SSL Configuration (for production security)
ssl = off                               # Enable for production with certificates
ssl_cert_file = 'server.crt'
ssl_key_file = 'server.key'

# =============================================================================
# MEMORY SETTINGS - Critical for betting system performance
# =============================================================================

# Shared Memory Settings - Optimized for 2GB container limit
shared_buffers = 512MB                  # 25% of container memory (2GB)
huge_pages = try                        # Use huge pages if available

# Memory for Maintenance Operations
maintenance_work_mem = 128MB            # For CREATE INDEX, VACUUM operations
autovacuum_work_mem = -1               # Use maintenance_work_mem

# Per-Connection Memory Settings
work_mem = 8MB                         # Memory for sorts, hash joins (per operation)
temp_buffers = 16MB                    # Temporary tables buffer

# Background Writer Settings
bgwriter_delay = 200ms                 # Background writer frequency
bgwriter_lru_maxpages = 100           # Pages written per round
bgwriter_lru_multiplier = 2.0         # Multiplier for next round

# =============================================================================
# DISK I/O AND CHECKPOINTS - Critical for data integrity
# =============================================================================

# WAL (Write-Ahead Logging) Settings
wal_buffers = 32MB                     # WAL buffer size
wal_level = replica                    # Enable streaming replication
wal_sync_method = fdatasync           # Fastest reliable sync method

# Checkpoint Settings - Balance between performance and recovery time
checkpoint_completion_target = 0.9     # Spread checkpoint I/O
checkpoint_timeout = 15min            # Maximum checkpoint interval
max_wal_size = 2GB                    # Maximum WAL size before checkpoint
min_wal_size = 1GB                    # Minimum WAL size

# Archive Settings (for backup)
archive_mode = on                      # Enable archiving for backups
archive_command = '/bin/true'          # Placeholder - customize for your backup solution

# =============================================================================
# QUERY PLANNING AND EXECUTION - Betting system optimization
# =============================================================================

# Cost-based Optimizer Settings
seq_page_cost = 1.0                   # Sequential page cost
random_page_cost = 1.1                # Random page access cost (SSD optimized)
cpu_tuple_cost = 0.01                 # CPU cost per tuple
cpu_index_tuple_cost = 0.005          # CPU cost per index tuple
cpu_operator_cost = 0.0025            # CPU cost per operator

# Optimizer Configuration
default_statistics_target = 1000      # Increased stats for better plans
constraint_exclusion = partition      # Enable constraint exclusion
enable_partitionwise_join = on        # Parallel partition joins
enable_partitionwise_aggregate = on   # Parallel partition aggregates

# Join Configuration
join_collapse_limit = 8               # Query rewrite limit
from_collapse_limit = 8               # FROM clause collapse limit

# Parallel Query Settings
max_parallel_workers_per_gather = 2   # Parallel workers per query
max_parallel_workers = 4              # Total parallel workers
max_worker_processes = 8              # Background worker processes

# =============================================================================
# AUTOVACUUM - Critical for betting system performance
# =============================================================================

# Autovacuum Settings - Aggressive for high-update betting tables
autovacuum = on                        # Enable autovacuum
autovacuum_max_workers = 3            # Concurrent autovacuum workers
autovacuum_naptime = 30s              # Sleep between autovacuum runs

# Vacuum Thresholds - Tuned for betting data patterns
autovacuum_vacuum_threshold = 50      # Minimum updated rows for vacuum
autovacuum_vacuum_scale_factor = 0.1  # Fraction of table size
autovacuum_analyze_threshold = 25     # Minimum changed rows for analyze
autovacuum_analyze_scale_factor = 0.05 # Fraction of table for analyze

# Vacuum Cost Settings
vacuum_cost_delay = 10ms              # Delay between vacuum operations
vacuum_cost_page_hit = 1              # Cost for page in buffer
vacuum_cost_page_miss = 10            # Cost for page not in buffer
vacuum_cost_page_dirty = 20           # Cost for dirty page
vacuum_cost_limit = 2000              # Cost limit before delay

# =============================================================================
# LOGGING AND MONITORING - Production observability
# =============================================================================

# Log Settings
log_destination = 'stderr'            # Log to stderr for Docker
logging_collector = off               # Docker handles log collection
log_min_messages = info               # Minimum message level
log_min_error_statement = error       # Log statements causing errors

# Connection Logging
log_connections = on                   # Log new connections
log_disconnections = on               # Log disconnections
log_hostname = off                    # Don't resolve hostnames

# Query Logging - Important for betting system optimization
log_statement = 'mod'                 # Log data modification statements
log_min_duration_statement = 1000ms   # Log slow queries (1 second+)
log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,client=%h '

# Lock and Deadlock Monitoring
log_lock_waits = on                   # Log lock waits
deadlock_timeout = 1s                 # Deadlock detection timeout
log_checkpoints = on                  # Log checkpoint activity

# =============================================================================
# QUERY STATISTICS - Performance monitoring
# =============================================================================

# Query Statistics Extension
shared_preload_libraries = 'pg_stat_statements'
pg_stat_statements.max = 10000        # Number of statements tracked
pg_stat_statements.track = all        # Track all statements
pg_stat_statements.save = on          # Save statistics across restarts

# Statistics Settings
track_activities = on                 # Track running queries
track_counts = on                     # Track row counts
track_io_timing = on                  # Track I/O timing
track_functions = all                 # Track function calls

# =============================================================================
# REPLICATION AND RECOVERY - High availability setup
# =============================================================================

# Hot Standby Settings (for read replicas)
hot_standby = on                      # Allow queries during recovery
max_standby_archive_delay = 30s       # Delay before canceling queries
max_standby_streaming_delay = 30s     # Delay for streaming queries

# Replication Settings
max_wal_senders = 3                   # Maximum replication connections
max_replication_slots = 3             # Maximum replication slots
wal_keep_segments = 32                # WAL segments to keep for replicas

# =============================================================================
# LOCALE AND FORMATTING - Betting system requirements
# =============================================================================

# Locale Settings - Important for number/date formatting in betting
timezone = 'America/New_York'         # Eastern Time for MLB
log_timezone = 'America/New_York'
datestyle = 'iso, mdy'
timezone_abbreviations = 'Default'

# Numeric Settings
lc_messages = 'C'                     # Error message language
lc_monetary = 'en_US.UTF-8'          # Monetary formatting
lc_numeric = 'en_US.UTF-8'           # Numeric formatting
lc_time = 'en_US.UTF-8'              # Time formatting

# =============================================================================
# SECURITY SETTINGS - Production security
# =============================================================================

# Statement Timeout - Prevent runaway queries
statement_timeout = 300000            # 5 minutes maximum query time
lock_timeout = 30000                  # 30 seconds maximum lock wait
idle_in_transaction_session_timeout = 600000  # 10 minutes idle timeout

# Password Encryption
password_encryption = scram-sha-256   # Strong password encryption

# =============================================================================
# EXTENSION SETTINGS - Additional functionality
# =============================================================================

# TimescaleDB Settings (if using time-series data)
# timescaledb.max_background_workers = 4
# timescaledb.restoring = off

# PostGIS Settings (if using geographic data)
# postgis.gdal_enabled_drivers = 'GTiff PNG JPEG GIF XYZ'
# postgis.enable_outdb_rasters = false

# =============================================================================
# CUSTOM SETTINGS - MLB Betting specific
# =============================================================================

# Application-specific settings
application_name = 'mlb_betting_system'

# Custom GUC variables for application
# custom.betting_system_version = '1.0.0'
# custom.data_retention_days = 365
# custom.max_concurrent_bets = 100